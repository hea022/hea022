# سيقوم سير العمل هذا ببناء ودفع تطبيق node.js إلى تطبيق Azure Web عند دفع التزام إلى الفرع الافتراضي الخاص بك.
#
This workflow assumes that you have already created the Azure App Service target web app.
# للحصول على تعليمات انظر https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configurate this workflow:
#
# 1. Download the publishing file for your Azure Web app. You can download this file from your web application public view page at Azure portal.
# For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2.إنشاء سر في مستودعك المسمى AZURE_WEBAPP_PUBLISH_PROFILE، ولصق محتويات ملفك الشخصي المنشور كقيمة للسر.
# للحصول على تعليمات حول الحصول على ملف النشر، انظر: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for AzURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# لمزيد من المعلومات حول إجراءات GitHub ل Azure: https://github.com/Azure/Actions
# لمزيد من المعلومات حول إجراءات نشر تطبيقات Azure Web: https://github.com/Azure/webapps-deploy
# For more samples to start with GitHub Action workflow to post in Azure: https://github.com/Azure/actions-workflow-samples

على:
  push:
    branches: [ "الرئيسية" ]
  Workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: اسم التطبيق الخاص بك    # تعيين هذا لاسم التطبيق الخاص بك
  AZURE_WEBAPP_PACKAGE_PATH:'.'      # تعيين هذا إلى المسار إلى مشروع تطبيق الويب الخاص بك، الافتراضي إلى جذر المستودع
  NODE_VERSION: '20.x'                # تعيين هذا إلى إصدار العقدة لاستخدامها

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
